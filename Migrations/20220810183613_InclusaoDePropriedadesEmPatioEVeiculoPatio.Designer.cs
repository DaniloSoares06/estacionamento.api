// <auto-generated />
using System;
using Estacionamento.API.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Estacionamento.API.Migrations
{
    [DbContext(typeof(EstacionamentoContexto))]
    [Migration("20220810183613_InclusaoDePropriedadesEmPatioEVeiculoPatio")]
    partial class InclusaoDePropriedadesEmPatioEVeiculoPatio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Estacionamento.API.Dominios.Patio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<double>("Faturado")
                        .HasColumnType("double");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("PATIO");
                });

            modelBuilder.Entity("Estacionamento.API.Dominios.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Proprietario")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VEICULO");
                });

            modelBuilder.Entity("Estacionamento.API.Dominios.VeiculoPatio", b =>
                {
                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.Property<int>("PatioId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("HoraSaida")
                        .HasColumnType("datetime");

                    b.Property<int>("VagasDisponiveis")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("VeiculoId", "PatioId");

                    b.HasIndex("PatioId");

                    b.ToTable("VEICULO_PATIO");
                });

            modelBuilder.Entity("Estacionamento.API.Dominios.VeiculoPatio", b =>
                {
                    b.HasOne("Estacionamento.API.Dominios.Patio", "Patio")
                        .WithMany("Veiculos")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estacionamento.API.Dominios.Veiculo", "Veiculo")
                        .WithMany("Patios")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Estacionamento.API.Dominios.Patio", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("Estacionamento.API.Dominios.Veiculo", b =>
                {
                    b.Navigation("Patios");
                });
#pragma warning restore 612, 618
        }
    }
}
